/*
 * Note: this file originally auto-generated by mib2c
 * using generic-table-enums.m2c
 */
#ifndef APPLTABLE_ENUMS_H
#define APPLTABLE_ENUMS_H

#ifdef __cplusplus
extern          "C" {
#endif

    /*
     * NOTES on enums
     * ==============
     *
     * Value Mapping
     * -------------
     * If the values for your data type don't exactly match the
     * possible values defined by the mib, you should map them
     * below. For example, a boolean flag (1/0) is usually represented
     * as a TruthValue in a MIB, which maps to the values (1/2).
     *
     */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table applTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * applOperStatus (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef APPLOPERSTATUS_ENUMS
#define APPLOPERSTATUS_ENUMS

#define APPLOPERSTATUS_UP  1
#define APPLOPERSTATUS_DOWN  2
#define APPLOPERSTATUS_HALTED  3
#define APPLOPERSTATUS_CONGESTED  4
#define APPLOPERSTATUS_RESTARTING  5
#define APPLOPERSTATUS_QUIESCING  6

#endif                          /* APPLOPERSTATUS_ENUMS */




#ifdef __cplusplus
}
#endif
#endif                          /* APPLTABLE_ENUMS_H */
